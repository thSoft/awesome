# Mind map

## Model

### Initial model
```
commit
  root = [#node #root title: ""]
  [#session focused: root mode: [#editing-content]]
```

### Descendants
```
search
  node = [#node]

bind
  node.descendants += node
```

```
search
  node = [#node]
  children = node.branches.node

bind
  node.descendants += children
```

```
search
  node = [#node]
  descendants = node.branches.node.descendants

bind
  node.descendants += descendants
```

### Next branch
```
search
  session = [#session mode: [#navigating] focused]
  containing-branch = [#branch node: focused sort]
  parent = [#node branches: containing-branch]
  next-branch = parent.branches
  next-branch.sort > sort
  next-branch.sort = min[value: next-branch.sort given: next-branch]

bind
  session.next-branch := next-branch
```

### Previous branch
```
search
  session = [#session mode: [#navigating] focused]
  containing-branch = [#branch node: focused sort]
  parent = [#node branches: containing-branch]
  previous-branch = parent.branches
  previous-branch.sort < sort
  previous-branch.sort = max[value: previous-branch.sort given: previous-branch]

bind
  session.previous-branch := previous-branch
```

### New branch
```
search
  [#session mode: [#adding-branch]]
  new-branch = [#branch not(label) not(node)]

bind
  new-branch.tag += "new-branch"
```

### Edited node
```
search
  [#session mode: [#editing-content] focused]

bind
  focused.tag += "edited"
```

Hidden nodes
```
search
  node = [#node]
  path = [#node #collapsed descendants: node]
  not(node = path)

bind
  node.tag += "hidden"
```

## View

### Root container
```
commit @browser
  [#span #root-container]
```

### Node
```
search
  node = [#node not(#hidden)]

search @browser
  node-container = if branch-view = [#branch-view node: node] then branch-view else [#root-container]

bind @browser
  node-container.children +=
    [#span #node-view node: node class: "node" sort: 3]
```

### Node content
```
search @browser
  node-view = [#node-view node]

search
  node = [not(#edited)]
  text = if node.title then node.title else ""

bind @browser
  node-view.children += [#span #node-content node: node class: "content" text: text sort: 0]
```

```
search @browser
  node-view = [#node-view node]

search
  node = [#edited]
  text = if node.title then node.title else ""

bind @browser
  node-view.children += [#input #node-content #editor node: node class: ("content", "editing") value: text sort: 0 onfocus: "autosize(event); event.target.selectionStart = event.target.value.length;" oninput: "autosize(event);"]
```

### Branch container
```
search
  node = [#node not(#collapsed) branches]

search @browser
  node-view = [#node-view node: node]

bind @browser
  node-view.children +=
    [#span #collapser text: "⊖" sort: 1]
  node-view.children +=
    [#span #branch-container node: node class: "branch-container" sort: 2]
```

### Collapsed node
```
search
  collapsed-node = [#node #collapsed]

search @browser
  node-view = [#node-view node: collapsed-node]

bind @browser
  node-view.children +=
    [#span #expander text: "⊕" sort: 1]
```

### Branch
```
search
  branch = node.branches
  not(node = [#collapsed])

search @browser
  branch-container = [#branch-container node]

bind @browser
  branch-container.children +=
    [#span #branch-view branch: branch class: "branch" sort: branch.sort children:
      [#span class: "connector" sort: 0]
    ]
```

### Branch's label & node
```
search
  branch = [#branch]

search @browser
  branch-view = [#branch-view branch: branch]

bind @browser
  branch-view.node := branch.node
  branch-view.children +=
    [#span class: "label" text: branch.label sort: 1]
  branch-view.children +=
    [#span class: "connector" sort: 2]
```

### Branch adder
```
search
  new-branch = [#new-branch]

search @browser
  branch-view = [#branch-view branch: new-branch]

bind @browser
  branch-view.children +=
    [#input sort: 1 size: 1 oninput: "autosize(event);"]
```

### Focused subtree
```
search
  session = [#session focused]

search @browser
  node-view = [#node-view node: focused]

bind @browser
  node-view.class += "focused-node"
```

### Focused content
```
search
  session = [#session focused]

search @browser
  node-content = [#node-content node: focused]

bind @browser
  node-content.class += "focused-content"
```

### Scripts
```
commit @browser
  [#script text: "
function autosize(event) {
  event.target.size = Math.max(event.target.value.length, 1);
}

var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
var target = document.querySelector('.program');

var observer = new MutationObserver(function(mutations) {
  mutations.forEach(function(mutation) {
    if (mutation.type === 'childList') {
      var addedNodes = [].slice.call(mutation.addedNodes);
      addedNodes.forEach(function(addedNode) {
        if ((addedNode.nodeName == 'INPUT')) {
          addedNode.focus();
        }
      });
    }
  });
});

observer.observe(target, {
	childList: true,
	subtree: true
});
"]
```

### Styles
```css
/* CSS bug */
{}
```

```css
body {
  font-family: 'Helvetica Neue';
}

.node {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  margin-top: 0.3em;
  margin-bottom: 0.3em;
  padding: 1px;
  cursor: default;
}

.content {
  box-shadow: 0 0 3px 1px gray;
  border-radius: 2px;
  padding: 0.2em;
  background-color: white;
}

.editing {
  background-color: lightyellow;
  border: 0;
  padding-right: 0;
  font-family: inherit;
  font-size: inherit;
  outline: 0;
  cursor: auto;
}

.focused-node {
  border: 1px dotted lightblue;
  border-radius: 4px;
  padding: 0;
}

.focused-content {
  box-shadow: 0 0 3px 1px blue;
  border-radius: 2px;
  color: blue;
}

.connector {
  border-bottom: 1px black solid;
  width: 10px;
}

.branch-container {
  display: flex;
  flex-direction: column;
}

.branch {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
}

.branch::before {
  content: "";
  position: absolute;
  width: 1px;
  background: black;
}

.branch:only-child::before {
  display: none;
}

.branch:first-child::before {
  top: 50%;
  height: 50%;
}

.branch::before {
  top: 0;
  height: 100%;
}

.branch:last-child::before {
  top: 0;
  height: 50%;
}

.label {
  font-size: 90%;
}
```

## Key combination

```
commit @event
  [#key-combination]
```

```
search @event
  key-combination = [#key-combination]
  [#keydown key]

commit @event
  key-combination.keys += key
```

```
search @event
  key-combination = [#key-combination]
  [#keyup key]

commit @event
  key-combination.keys := none
```

## Navigating

### Right: focus first child
```
search @event
  [#keydown key: 39]

search
  session = [#session focused mode: [#navigating]]
  first-branch = focused.branches
  first-branch = [sort: min[value: focused.branches.sort]]

commit
  session.focused := first-branch.node
```

### Left: focus parent
```
search @event
  [#keydown key: 37]

search
  session = [#session focused mode: [#navigating]]
  parent = [#node branches: [#branch node: focused]]

commit
  session.focused := parent
```

### Down: focus next sibling
```
search @event
  [#keydown key: 40]

search
  session = [#session mode: [#navigating] next-branch]

commit
  session.focused := next-branch.node
```

TODO: next node on same level

### Up: focus previous sibling
```
search @event
  [#keydown key: 38]

search
  session = [#session mode: [#navigating] previous-branch]

commit
  session.focused := previous-branch.node
```

TODO: previous node on same level

### Click: focus
```
search @event
  [#click element]

search @browser
  element = [#node-content node]

search
  session = [#session]

commit
  session.focused := node
  session.mode := [#navigating]
```
### Tab: start adding branch
```
search @event
  [#keydown key: 9]

search
  session = [#session mode: [#navigating] focused]
  last-branch-sort = if focused.branches then max[value: focused.branches.sort] else -1

commit
  session.mode := [#adding-branch]
  focused.tag -= "collapsed"
  focused.branches += [#branch sort: last-branch-sort + 1]
```

### Backspace: delete node
```
search @event
  [#keydown key: 8]

search
  session = [#session mode: [#navigating] focused]
  nodes-to-delete = focused.descendants
  branches-to-delete = [#branch node: nodes-to-delete]
  containing-branch = [#branch node: focused]
  parent = [#node branches: containing-branch]
  to-focus = if session.previous-branch then session.previous-branch.node else parent

commit
  parent.branches -= containing-branch
  nodes-to-delete := none
  branches-to-delete := none
  session.focused := to-focus
```

### F2: start editing content
```
search @event
  [#keydown key: 113]

search
  session = [#session mode: [#navigating] focused]

commit
  session.mode := [#editing-content]
```

### Enter: start adding sibling below
```
search @event
  [#keydown key: 13]
  not([#key-combination keys: 16])

search
  session = [#session mode: [#navigating] focused]
  parent = [#node branches: [#branch node: focused sort]]
  new-sort = if session.next-branch then (sort + session.next-branch.sort) / 2 else sort + 1

commit
  session.mode := [#adding-branch]
  session.focused := parent
  parent.branches += [#branch sort: new-sort]
```

### Shift+Enter: start adding sibling above
```
search @event
  [#key-combination keys: (13, 16)]

search
  session = [#session mode: [#navigating] focused]
  parent = [#node branches: [#branch node: focused sort]]
  new-sort = if session.previous-branch then (session.previous-branch.sort + sort) / 2 else sort - 1

commit
  session.mode := [#adding-branch]
  session.focused := parent
  parent.branches += [#branch sort: new-sort]
```

### Space/click on collapser/expander: collapse/expand
```
search @event
  [#keydown key: 32]

search
  [#session mode: [#navigating] focused]
  focused.branches
  not(focused = [#collapsed])

commit
  focused.tag += "collapsed"
```

```
search @event
  [#keydown key: 32]

search
  [#session mode: [#navigating] focused]
  focused.branches
  focused = [#collapsed]

commit
  focused.tag -= "collapsed"
```

```
search @event
  [#click element]

search @browser
  element = [#expander]
  node-view = [#node-view node children: element]

search
  session = [#session]

commit
  node.tag -= "collapsed"
  session.focused := node
```

```
search @event
  [#click element]

search @browser
  element = [#collapser]
  node-view = [#node-view node children: element]

search
  session = [#session]

commit
  node.tag += "collapsed"
  session.focused := node
```

## Adding branch

### Enter: complete adding branch
```
search @event
  event = [#keydown key: 13]

search
  session = [#session focused]
  new-branch = [#new-branch]

search @browser
  branch-adder = [#branch-view branch: new-branch]
  input = branch-adder.children
  input = [#input]

commit
  new-branch.label := input.value
  node = [#node title: "" event]
  new-branch.node := node
  session.mode := [#editing-content]
  session.focused := node
```

### Esc: cancel adding branch
```
search @event
  [#keydown key: 27]

search
  new-branch = [#new-branch]
  session = [#session focused]

commit
  session.mode := [#navigating]
  focused.branches -= new-branch
```

### Blur: cancel adding branch
```
search @event
  [#blur element]

search @browser
  branch-adder = [#branch-view branch: new-branch]
  element = branch-adder.children
  element = [#input]

search
  session = [#session]
  new-branch = [#new-branch]
  parent = [branches: new-branch]

commit
  parent.branches -= new-branch
```

## Editing content

### Enter: accept changes
```
search @event
  [#keydown key: 13]

search
  session = [#session mode: [#editing-content] focused]

search @browser
  editor = [#editor]

commit
  focused.title := editor.value
  session.mode := [#navigating]
```

### Esc: discard changes
```
search @event
  [#keydown key: 27]

search
  session = [#session mode: [#editing-content] focused]

commit
  session.mode := [#navigating]
```

### Blur: accept changes
```
search @event
  [#blur element: editor]

search @browser
  editor = [#editor]

search
  session = [#session mode: [#editing-content] focused]

commit
  focused.title := editor.value
  session.mode := [#navigating]
```
